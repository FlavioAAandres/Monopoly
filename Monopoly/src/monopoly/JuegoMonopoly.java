/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package monopoly;

import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.HashSet;
import java.util.Random;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/**
 *
 * @author Flavio A. Pareja
 */
public class JuegoMonopoly extends javax.swing.JFrame {

    /**
     * Creates new form JuegoMonopoly
     */
    static Propiedad ProPTR;
    static Jugadores JugPTR;
    static Jugadores jugActual; 
    int PosJugActual; 
    
    
    public JuegoMonopoly() throws IOException {
        initComponents();
        Cargar_Estructura_Propiedades();
        CREAR_JUGADOR(JugPTR,"",0,5);
        lDadoA.setVisible(false);
        lDadoB.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        a22 = new javax.swing.JLabel();
        a21 = new javax.swing.JLabel();
        a20 = new javax.swing.JLabel();
        a19 = new javax.swing.JLabel();
        a18 = new javax.swing.JLabel();
        e17 = new javax.swing.JLabel();
        e16 = new javax.swing.JLabel();
        e15 = new javax.swing.JLabel();
        e14 = new javax.swing.JLabel();
        e13 = new javax.swing.JLabel();
        e12 = new javax.swing.JLabel();
        e11 = new javax.swing.JLabel();
        e10 = new javax.swing.JLabel();
        e9 = new javax.swing.JLabel();
        e8 = new javax.swing.JLabel();
        e7 = new javax.swing.JLabel();
        e6 = new javax.swing.JLabel();
        e5 = new javax.swing.JLabel();
        e4 = new javax.swing.JLabel();
        e3 = new javax.swing.JLabel();
        e2 = new javax.swing.JLabel();
        e1 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        Tablero = new javax.swing.JLabel();
        lDadoB = new javax.swing.JLabel();
        lDadoA = new javax.swing.JLabel();
        Y = new javax.swing.JLabel();
        X = new javax.swing.JLabel();
        bDados = new javax.swing.JButton();
        Blue_Background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAlwaysOnTop(true);
        setFocusTraversalPolicyProvider(true);
        setMaximumSize(new java.awt.Dimension(1100, 660));
        setMinimumSize(new java.awt.Dimension(1100, 660));
        setPreferredSize(new java.awt.Dimension(1100, 660));
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                formKeyTyped(evt);
            }
        });
        getContentPane().setLayout(null);

        a22.setFocusable(false);
        getContentPane().add(a22);
        a22.setBounds(210, 10, 50, 90);

        a21.setFocusable(false);
        getContentPane().add(a21);
        a21.setBounds(150, 10, 60, 90);

        a20.setFocusable(false);
        getContentPane().add(a20);
        a20.setBounds(100, 10, 50, 90);

        a19.setFocusable(false);
        getContentPane().add(a19);
        a19.setBounds(10, 10, 90, 90);

        a18.setFocusable(false);
        getContentPane().add(a18);
        a18.setBounds(10, 100, 90, 50);

        e17.setFocusable(false);
        getContentPane().add(e17);
        e17.setBounds(10, 150, 90, 50);

        e16.setFocusable(false);
        getContentPane().add(e16);
        e16.setBounds(10, 210, 90, 50);

        e15.setFocusable(false);
        getContentPane().add(e15);
        e15.setBounds(10, 260, 90, 50);

        e14.setFocusable(false);
        getContentPane().add(e14);
        e14.setBounds(10, 310, 90, 50);

        e13.setFocusable(false);
        getContentPane().add(e13);
        e13.setBounds(10, 370, 90, 50);

        e12.setFocusable(false);
        getContentPane().add(e12);
        e12.setBounds(10, 420, 90, 50);

        e11.setFocusable(false);
        getContentPane().add(e11);
        e11.setBounds(10, 470, 90, 50);

        e10.setFocusable(false);
        getContentPane().add(e10);
        e10.setBounds(10, 520, 90, 90);

        e9.setFocusable(false);
        getContentPane().add(e9);
        e9.setBounds(100, 520, 50, 90);

        e8.setFocusable(false);
        getContentPane().add(e8);
        e8.setBounds(150, 520, 60, 90);

        e7.setFocusable(false);
        getContentPane().add(e7);
        e7.setBounds(210, 520, 50, 90);

        e6.setFocusable(false);
        getContentPane().add(e6);
        e6.setBounds(260, 520, 50, 90);

        e5.setFocusable(false);
        getContentPane().add(e5);
        e5.setBounds(310, 520, 60, 90);

        e4.setFocusable(false);
        getContentPane().add(e4);
        e4.setBounds(370, 520, 50, 90);

        e3.setFocusable(false);
        e3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                e3MouseClicked(evt);
            }
        });
        getContentPane().add(e3);
        e3.setBounds(420, 520, 50, 90);

        e2.setFocusable(false);
        getContentPane().add(e2);
        e2.setBounds(470, 520, 50, 90);

        e1.setFocusable(false);
        getContentPane().add(e1);
        e1.setBounds(520, 520, 90, 90);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Tokens/boat.png"))); // NOI18N
        jLabel1.setFocusable(false);
        jLabel1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jLabel1KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jLabel1KeyTyped(evt);
            }
        });
        getContentPane().add(jLabel1);
        jLabel1.setBounds(540, 530, 50, 60);

        Tablero.setIcon(new javax.swing.ImageIcon(getClass().getResource("/monopoly/Tab.jpg"))); // NOI18N
        Tablero.setToolTipText("");
        Tablero.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Tablero.setFocusable(false);
        getContentPane().add(Tablero);
        Tablero.setBounds(10, 11, 600, 600);

        lDadoB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/monopoly/DadoGirando.gif"))); // NOI18N
        lDadoB.setFocusable(false);
        getContentPane().add(lDadoB);
        lDadoB.setBounds(720, 20, 80, 80);

        lDadoA.setIcon(new javax.swing.ImageIcon(getClass().getResource("/monopoly/DadoGirando.gif"))); // NOI18N
        lDadoA.setFocusable(false);
        getContentPane().add(lDadoA);
        lDadoA.setBounds(640, 20, 80, 80);

        Y.setFocusable(false);
        getContentPane().add(Y);
        Y.setBounds(820, 230, 0, 0);

        X.setFocusable(false);
        getContentPane().add(X);
        X.setBounds(770, 230, 0, 0);

        bDados.setText("Lanzar");
        bDados.setFocusable(false);
        bDados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bDadosActionPerformed(evt);
            }
        });
        getContentPane().add(bDados);
        bDados.setBounds(970, 30, 100, 50);

        Blue_Background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/monopoly/CustomBack.jpg"))); // NOI18N
        Blue_Background.setText("jLabel2");
        Blue_Background.setFocusable(false);
        Blue_Background.setMaximumSize(new java.awt.Dimension(1138, 900));
        Blue_Background.setMinimumSize(new java.awt.Dimension(1138, 900));
        Blue_Background.setPreferredSize(new java.awt.Dimension(1138, 900));
        getContentPane().add(Blue_Background);
        Blue_Background.setBounds(0, 0, 1100, 640);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void e3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_e3MouseClicked
        if (evt.getClickCount() == 2) {
            System.out.println("Double Click");
        }       
    }//GEN-LAST:event_e3MouseClicked
    private void bDadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bDadosActionPerformed
        
            lDadoB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/monopoly/DadoGirando.gif")));
            lDadoA.setIcon(new javax.swing.ImageIcon(getClass().getResource("/monopoly/DadoGirando.gif")));
            lDadoA.setVisible(true);
            lDadoB.setVisible(true);
            Dados D = new Dados();
            D.start();                               //[0,   1,     2]
            int[] R = D.getR(); //RETORNA EL RESULTADO [D1, D2, TOTAL]
            int[] CAMBIO=Movimiento.Posicion(R[2]);//DEVUELVE UN VECTOR [X , Y] (EL VECTOR QUE RETORNA NO LO USA DEBUGGEALO PA QUE VEAS)
            int X = CAMBIO[0];
            int Y = CAMBIO[1];
            jLabel1.setLocation(X,Y);
         
    }//GEN-LAST:event_bDadosActionPerformed
    private void jLabel1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jLabel1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel1KeyPressed
    private void jLabel1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jLabel1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel1KeyTyped
    private void formKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyTyped
        // TODO add your handling code here:
        int x,y;
            x = jLabel1.getX();                
            y = jLabel1.getY();
            if(evt.getKeyChar()== 'w'){
            y-=05;
            jLabel1.setLocation(x, y);}
            
            if(evt.getKeyChar()== 'a'){
            x-=05;
            jLabel1.setLocation(x, y);}
        
        System.out.println("x: " + x + "y: " + y );
        
        
    }//GEN-LAST:event_formKeyTyped
    public static Propiedad Agregar(Propiedad ptr, String NombrePropiedad,int cp,int alq, int c1, int c2, int c3, int c4,int costoC, int CostoH){
        if (ptr == null) {
            ptr = new Propiedad(NombrePropiedad,alq,cp,c1,c2,c3,c4,costoC,CostoH);
        } else {
            Propiedad p = ptr;
            while(p.rLink != null) {
                p = p.rLink;
            }
            Propiedad q = new Propiedad(NombrePropiedad,alq,cp,c1,c2,c3,c4,costoC,CostoH);
            p.rLink = q;
            q.lLink = p;
        }
        return ptr;
    }
    private void Cargar_Estructura_Propiedades() throws IOException{
        FileReader f = new FileReader("C:\\Users\\Flavio A. Pareja\\Documents\\NetBeansProjects\\Monopoly\\src\\monopoly\\BdPropiedades.txt");
        BufferedReader b = new BufferedReader(f);
        int[] H = new int[20];
        String NombrePropiedad = null; 
        String cadena;
        String[] Separador; 
        while((cadena = b.readLine())!=null) {
            System.out.println(cadena);
            Separador = cadena.split(";");
            int i=0;
            for(String A: Separador){
                if (i==0) {
                    NombrePropiedad = A; 
                }else{
                    H[i] = Integer.valueOf(A);                
                }                
               i++; 
            }            
            ProPTR = Agregar(ProPTR,NombrePropiedad,H[1],H[2],H[3],H[4],H[5],H[6],H[7],H[8]);              
        }
      b.close();
    }
    public static Jugadores CREAR_JUGADOR(Jugadores PTR, String Nombre, int Dinero, int n){    
           Jugadores last = null; 
       for (int i =0; i<n; i++){// while (op == 0) {      
            if (PTR == null) {
                PTR = new Jugadores("Hola"+i, 5000+(1000*i));
                last = PTR;
            } else {
                last.Link = new Jugadores("Hola"+i, 5000+(1000*i));
                last = last.Link;
            }
            
        }
       last.Link = PTR;
       return PTR;
    }
  
    
   
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JuegoMonopoly.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JuegoMonopoly.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JuegoMonopoly.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JuegoMonopoly.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new JuegoMonopoly().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(JuegoMonopoly.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Blue_Background;
    private javax.swing.JLabel Tablero;
    private javax.swing.JLabel X;
    private javax.swing.JLabel Y;
    private javax.swing.JLabel a18;
    private javax.swing.JLabel a19;
    private javax.swing.JLabel a20;
    private javax.swing.JLabel a21;
    private javax.swing.JLabel a22;
    private javax.swing.JButton bDados;
    private javax.swing.JLabel e1;
    private javax.swing.JLabel e10;
    private javax.swing.JLabel e11;
    private javax.swing.JLabel e12;
    private javax.swing.JLabel e13;
    private javax.swing.JLabel e14;
    private javax.swing.JLabel e15;
    private javax.swing.JLabel e16;
    private javax.swing.JLabel e17;
    private javax.swing.JLabel e2;
    private javax.swing.JLabel e3;
    private javax.swing.JLabel e4;
    private javax.swing.JLabel e5;
    private javax.swing.JLabel e6;
    private javax.swing.JLabel e7;
    private javax.swing.JLabel e8;
    private javax.swing.JLabel e9;
    public static javax.swing.JLabel jLabel1;
    public static javax.swing.JLabel lDadoA;
    public static javax.swing.JLabel lDadoB;
    // End of variables declaration//GEN-END:variables
}
